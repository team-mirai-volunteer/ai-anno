version: '3.8'

services:
  # Nginx proxy
  nginx:
    image: nginx:1.28-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - web
    networks:
      - dify-network

  # API service
  api:
    image: langgenius/dify-api:1.4.2
    restart: always
    environment:
      MODE: api
      LOG_LEVEL: INFO
      STORAGE_TYPE: google-storage
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_USERNAME: ""
      REDIS_PASSWORD: ""
      REDIS_USE_SSL: "false"
      CELERY_BROKER_URL: redis://redis:6379/1
      MIGRATION_ENABLED: "true"
    env_file:
      - .env
    depends_on:
      - db-migrate
      - redis
    volumes:
      - ./volumes/app/storage:/app/api/storage
    networks:
      - dify-network

  # Worker service
  worker:
    image: langgenius/dify-api:1.4.2
    restart: always
    environment:
      MODE: worker
      LOG_LEVEL: INFO
      STORAGE_TYPE: google-storage
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_USERNAME: ""
      REDIS_PASSWORD: ""
      REDIS_USE_SSL: "false"
      CELERY_BROKER_URL: redis://redis:6379/1
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - ./volumes/app/storage:/app/api/storage
    networks:
      - dify-network

  # Web service
  web:
    image: langgenius/dify-web:1.4.2
    restart: always
    environment:
      CONSOLE_API_URL: http://api:5001
      APP_API_URL: http://api:5001
      SENTRY_DSN: ""
    networks:
      - dify-network

  # Database migration
  db-migrate:
    image: langgenius/dify-api:1.4.2
    restart: on-failure
    environment:
      MODE: migrate
      STORAGE_TYPE: google-storage
    env_file:
      - .env
    volumes:
      - ./volumes/app/storage:/app/api/storage
    networks:
      - dify-network

  # Redis
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - ./volumes/redis/data:/data
    command: redis-server --maxmemory 1g --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    networks:
      - dify-network

  # Plugin daemon
  plugin-daemon:
    image: langgenius/dify-plugin-daemon:0.1.2-local
    restart: always
    environment:
      PLUGIN_STORAGE_TYPE: google-storage
      LOG_LEVEL: INFO
    env_file:
      - .env
    volumes:
      - ./volumes/plugin-daemon/data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dify-network

  # Sandbox service
  sandbox:
    image: langgenius/dify-sandbox:0.2.12
    restart: always
    environment:
      API_KEY: ${DIFY_PLUGIN_DAEMON_KEY}
      SANDBOX_POOL_SIZE: 5
    networks:
      - dify-network

networks:
  dify-network:
    driver: bridge